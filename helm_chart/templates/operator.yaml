---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.operator.name }}
{{- if .Values.namespace }}
  namespace: {{ .Values.namespace }}
{{- end }}
spec:
  replicas: 1
  selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: {{ .Values.operator.name }}
        app.kubernetes.io/instance: {{ .Values.operator.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: {{ .Values.operator.name }}
        app.kubernetes.io/instance: {{ .Values.operator.name }}
    spec:
      serviceAccountName: {{ .Values.operator.name }}
{{- if not .Values.managedSecurityContext }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
{{- end }}
{{- if .Values.registry.imagePullSecrets}}
      imagePullSecrets:
      - name: {{ .Values.registry.imagePullSecrets }}
{{- end }}
      containers:
      - name: {{ .Values.operator.deployment_name }}
        image: {{ .Values.registry.operator }}/{{ .Values.operator.operator_image_name }}:{{ .Values.operator.version }}{{ .Values.build }}
        imagePullPolicy: {{ .Values.registry.pullPolicy }}
        {{- if .Values.operator.watchedResources }}
        args:
          {{- range .Values.operator.watchedResources }}
          - "-watch-resource={{ . }}"
          {{- end }}
          {{- if .Values.multiCluster.clusters }}
          - "-watch-resource=mongodbmulti"
          - '-cluster-names={{ join "," .Values.multiCluster.clusters }}'
          {{- end }}
        command:
          - "/usr/local/bin/mongodb-enterprise-operator"
        {{- end }}
        {{- if .Values.multiCluster.clusters }}
        volumeMounts:
          - mountPath: /etc/config/kubeconfig
            name: kube-config-volume
        {{- end }}
        resources:
          limits:
            cpu: 1100m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 200Mi
        env:
        - name: OPERATOR_ENV
          value: {{ .Values.operator.env }}
        - name: WATCH_NAMESPACE
{{- if .Values.operator.watchNamespace }}
          value: "{{ .Values.operator.watchNamespace }}"
{{- else }}
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- end }}
        - name: CURRENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
{{- if eq .Values.managedSecurityContext true }}
        - name: MANAGED_SECURITY_CONTEXT
          value: 'true'
{{- end }}
        - name: IMAGE_PULL_POLICY
          value: {{ .Values.registry.pullPolicy }}
        # Database
        - name: MONGODB_ENTERPRISE_DATABASE_IMAGE
          value: {{ .Values.registry.database }}/{{ .Values.database.name }}
        - name: INIT_DATABASE_IMAGE_REPOSITORY
          value: {{ .Values.registry.initDatabase }}/{{ .Values.initDatabase.name }}
        - name: INIT_DATABASE_VERSION
          value: {{ .Values.initDatabase.version }}{{ .Values.build }}
        - name: DATABASE_VERSION
          value: {{ .Values.database.version }}{{ .Values.build }}
        # Ops Manager
        - name: OPS_MANAGER_IMAGE_REPOSITORY
          value: {{ .Values.registry.opsManager }}/{{ .Values.opsManager.name }}
        - name: INIT_OPS_MANAGER_IMAGE_REPOSITORY
          value: {{ .Values.registry.initOpsManager }}/{{ .Values.initOpsManager.name }}
        - name: INIT_OPS_MANAGER_VERSION
          value: {{ .Values.initOpsManager.version }}{{ .Values.build }}
        # AppDB
        - name: INIT_APPDB_IMAGE_REPOSITORY
          value: {{ .Values.registry.initAppDb }}/{{ .Values.initAppDb.name }}
        - name: INIT_APPDB_VERSION
          value: {{ .Values.initAppDb.version }}{{ .Values.build }}
        - name: OPS_MANAGER_IMAGE_PULL_POLICY
          value: {{ .Values.registry.pullPolicy }}
        - name: AGENT_IMAGE
          value: "{{ .Values.registry.agent }}/{{ .Values.agent.name }}:{{ .Values.agent.version }}"
        - name: MONGODB_IMAGE
          value: {{ .Values.mongodb.name }}
        - name: MONGODB_REPO_URL
          value: {{ .Values.mongodb.repo }}

{{- if .Values.registry.imagePullSecrets }}
        - name: IMAGE_PULL_SECRETS
          value: {{ .Values.registry.imagePullSecrets }}
{{- end }}
{{- if .Values.customEnvVars }}
  {{- range split "&" .Values.customEnvVars }}
        - name: {{ (split "=" .)._0 }}
          value: '{{ (split "=" .)._1 }}'
  {{- end }}
{{- end }}
{{- if .Values.multiCluster.clusters }}
      volumes:
        - name: kube-config-volume
          secret:
            defaultMode: 420
            secretName: {{ .Values.multiCluster.kubeConfigSecretName }}
{{- end }}

{{- with .Values.operator }}
  {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}

{{- if .Values.debug }}
---
apiVersion: v1
kind: Service
metadata:
  name: debug-svc
spec:
  type: NodePort
  ports:
    - nodePort: {{ .Values.debugPort }}
      port: 40000
      protocol: TCP
  selector:
    app.kubernetes.io/name: {{ .Values.operator.name }}
{{- end }}
